openapi: 3.0.3
info:
  title: Магазин мебели
  description: Курсовой проект дисциплины "Программирование мобильных устройств"
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Приложение Furniture-Store
tags:
  - name: furniture
    description: Мебель
  - name: order
    description: Заказы

paths:
  /catalog/furniture:

    post:
      tags:
        - furniture
      description: Добавить мебель в каталог
      operationId: createFurniture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureDto'
        required: true
      responses:
        '201':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - furniture
      description: Список всей мебели в каталоге
      operationId: getAllFurniture
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FurnitureDto'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /catalog/furniture/findByArticle:
    get:
      tags:
        - furniture
      description: Получение информации по артикулу
      operationId: getFurnitureByArticle
      parameters:
        - name: article
          in: query
          description: Артикул товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureDto'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /catalog/furniture/{article}/remove:
    delete:
      tags:
        - furniture
      description: Удаление мебели из каталога по артикулу
      operationId: removeFurnitureByArticle
      parameters:
        - name: article
          in: path
          description: Артикул товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /catalog/furniture/findByCategory:
    get:
      tags:
        - furniture
      description: Получение мебели с указанной категорией
      operationId: getFurnitureListByCategory
      parameters:
        - name: category
          in: query
          description: Категория товара товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FurnitureDto'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /catalog/furniture/findByModel:
    get:
      tags:
        - furniture
      description: Получение мебели с указанной моделью
      operationId: getFurnitureListByModel
      parameters:
        - name: model
          in: query
          description: Модель товара товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FurnitureDto'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /order:
    get:
      tags:
        - order
      description: Получение списка всех заказов
      operationId: getAllOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - order
      description: Добавить заказ
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOrderRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /order/{tracking_number}:
    get:
      tags:
        - order
      description: Получение заказа по трек-номеру
      operationId: getOrderByTrackingNumber
      parameters:
        - name: tracking_number
          in: path
          description: Трек номер заказа
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullOrder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /order/{tracking_number}/remove:
    delete:
      tags:
        - order
      description: Удаление заказа по трек-номеру
      operationId: removeOrderByTrackingNumber
      parameters:
        - name: tracking_number
          in: path
          description: Трек номер заказа
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:

    FurnitureDto:
      type: object
      properties:
        article:
          type: string
          description:
            Уникальный код товара в каталоге
        name:
          type: string
          description:
            Наименование товара
        category:
          type: string
          description:
            Категория товара
        manufacturer:
          type: string
          description:
            Изготовитель товара
        model:
          type: string
          description:
            Модель товара
        description:
          type: string
          description:
            Описание товара
        amount:
          type: integer
          description:
            Стоимость товара (в копейках)
      example:
        {
          "article": "09900493",
          "name": "Диван угловой Луна Люкс №3",
          "category": "Мягкая мебель",
          "manufacturer": "ЛЮКС-МЕБЕЛЬ",
          "model": "Луна Люкс",
          "description": "Тут должно быть описание товара",
          "amount": 4000000
        }

    SaveOrderRequest:
      type: object
      properties:
        nameClient:
          type: string
          description:
            Имя клинта
        emailClient:
          type: string
          description:
            Email клиента для обратной связи
        furnitureList:
          type: array
          items:
            type: string
      example:
        {
          "nameClient": "Максим",
          "emailClient": "maxstream1943@gmail.com",
          "furnitureList": [
            "09900493",
            "03455525"
          ]
        }

    FullOrder:
      type: object
      properties:
        nameClient:
          type: string
          description:
            Имя клинта
        emailClient:
          type: string
          description:
            Email клиента для обратной связи
        furnitureList:
          type: array
          xml:
            name: furnitures
            wrapped: true
          items:
            $ref: '#/components/schemas/FurnitureDto'
      example:
        {
          "nameClient": "Максим",
          "emailClient": "maxstream1943@gmail.com",
          "furnitureList": [
            {
              "article": "09900493",
              "name": "Диван угловой Луна Люкс №3",
              "category": "Мягкая мебель",
              "manufacturer": "ЛЮКС-МЕБЕЛЬ",
              "model": "Луна Люкс",
              "description": "Тут должно быть описание товара",
              "amount": 4000000
            }
          ]
        }

    OrderResponse:
      type: object
      properties:
        tracking_number:
          type: string
          description:
            Уникальный номер заказа
        dateOfCreation:
          type: string
          description:
            Дата создания заказа
        nameClient:
          type: string
          description:
            Имя клинта
        emailClient:
          type: string
          description:
            Email клиента для обратной связи
        totalAmount:
          type: integer
          description:
            Стоимость товаров в заказе (в копейках)
      example:
        {
          "tracking_number": "645456646454464",
          "dateOfCreation": "2022-08-19",
          "nameClient": "Максим",
          "emailClient": "maxstream1943@gmail.com",
          "totalAmount": 4000000
        }

    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            Относительная ссылка URI, однозначно идентифицирующая тип проблемы.
        title:
          type: string
          description: |-
            Наименование ошибки.
        status:
          type: integer
          format: int32
          description: |-
            HTTP - код ошибки.
          minimum: 100
          maximum: 599
        detail:
          type: string
          description: |-
            Детальное описание ошибки.

  responses:
    InternalServerError:
      description: Внутренняя ошибка сервера.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            {
              "type": "/problem/internal-server-error",
              "title": "Internal server error",
              "status": 500,
              "detail": "500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request."
            }
    NotFound:
      description: Сервис недоступен.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            {
              "type": "/problem/not-found",
              "title": "Resource not found",
              "status": 404,
              "detail": "404 Not Found response status code indicates that the server cannot find the requested resource."
            }
    UnauthorizedError:
      description: Ошибка авторизации.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            {
              "type": "/problem/unauthorized-error",
              "title": "Unauthorized",
              "status": 401,
              "detail": "401 Unauthorized response status code indicates that the client request has not been completed because it lacks valid authentication credentials for the requested resource."
            }
